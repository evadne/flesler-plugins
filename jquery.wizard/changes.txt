1.3.3
* Changed the licensing from GPL to GPL+MIT.

1.3.2
* Small improvements to make the code shorter.
* Removed the last argument received by onAfter as it was the same as the 'this' but jqueryfied.

1.3.1
* Exposed $.scrollTo.window() to get the element that needs to be animated, to scroll the window.
* Made the code as short as possible.
* Added option 'over'.
* Changed the arguments received by onAfter

1.3
* Added semicolon to the start, for safe file concatenation
* Added a limit check, values below 0 or over the maximum are fixed.
* Fixed the behavior for Opera, which seemed to react to both changes on <html> and <body>.
* Now it should work faster, only one of html or body go through all the processing, instead of both for all browsers.
* The option speed has been renamed to duration.
* The duration can be specified with a number as 2nd argument, and the rest of the settings as the third ( like $().animate )
* Remade the demo
* The border is also reduced, when 'margin' is set to true.

1.2.4

* The target can be in the form of { top:x, left:y } allowing different position for each axis.
* The option 'offset' has been added, to scroll behind or past the target. Can be a number(both axes) or { top:x, left:y }.

1.2.3

* Exposed the defaults.
* Made the callback functions receive more parameters.

1.2.2

* Fixed a bug, I didn't have to add the scrolled amount if it was body or html.

1.2

* The option 'onafter' is now called 'onAfter'.
* Two axis can be scrolled together, this is setted with the option 'axis'.
* In case 2 axis are chosen, the scrolling can be queued: one scrolls, and then the other.
* There's an intermediary event, 'onAfterFirst' called in case the axis are queued, after the first ends.
* If the option 'margin' is set to true, the plugin will take in account, the margin of the target(no use if target is a value).